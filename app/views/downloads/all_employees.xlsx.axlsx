
wb = xlsx_package.workbook

@surveys.each do |survey|
  wb.add_worksheet(name: "#{survey.form_name}") do |sheet|
    # intialize first part of first row (first row)
    headings = ["Id", "First Name", "Last Name", "E-Mail", "Role", "Employee Id", "Manager's ID", "Manager's First Name", "Manager's Last Name", "Manager's E-mail"]

    q_with_options = ["Entry Date"]
    option_content_headings = [" "]

    # build question headings based on first entry
    survey.entries.first.content['data'].each do |q_num, data_object|
      data_object['response'].each do |opt_num, option_data|
        q_with_options.push("#{q_num}_#{opt_num}")
        option_content_headings.push(option_data['content'])
      end
    end


    employee_manager_content = {} #this will store data to be added to worksheet. manager info array is key, employee rows are the value

    max_entries = 0
    @study.employees.each do |employee|
      # make manager info (entire second row)
      employee_info = [employee.id, employee.first_name, employee.last_name, employee.email, employee.type]

      #initialize array to store all of the employee response rows
      manager_rows = []

      man = employee.manager
        # count max num_of_entries
        num_of_entries = employee.entries.where(employee_survey_id: survey.id, target_person_id: man.id).count
         if num_of_entries > max_entries
           max_entries = num_of_entries
         end

        #initialize response row (will be recycled and used for each employee)
        response_row = [" ", " ", " ", " ", " "]

        # create employee info array (to be added to end of response row)
        manager_info = [employee.id, man.id, man.first_name, man.last_name, man.email ]

        # add employee info to response row
        response_row = response_row + manager_info

        #get responses pertaining to employee
        employee.entries.where(target_person_id: man.id, employee_survey_id: survey.id )
        .each do |entry|
          response_row.push(entry.created_at) # add date to response row
          entry.content['data'].each do |q_num, question_object|
            question_object['response'].each do |opt_num, option_data|
              response_row.push(option_data['value'])
            end
          end
        end

        #add response row to employee_rows array
        manager_rows.push(response_row)


      employee_manager_content[employee_info] = manager_rows


    end # - @study.managers.each

    #add another set of headers for each entry with an additiona' '_#'
    q_with_options_master = q_with_options
    option_content_headings_master = option_content_headings

    entry_num = 1
   (max_entries - 1).times do
     q_with_options_master = q_with_options_master + q_with_options.map {|q_opt| "#{q_opt}_#{entry_num + 1}"}
     option_content_headings_master = option_content_headings_master + option_content_headings
     entry_num = entry_num + 1
   end

    #add whitespace to option headings
    10.times do
      option_content_headings_master.unshift(" ")
    end

    # add headings and q_with_options together (first row)
    headings = headings + q_with_options_master
    sheet.add_row(headings)
    sheet.add_row(option_content_headings_master)
    byebug
    employee_manager_content.each do |employee_info, manager_rows|
      sheet.add_row(employee_info)
      manager_rows.each do |man_row|
        sheet.add_row(man_row)
      end
      sheet.add_row()
    end


  end
end
